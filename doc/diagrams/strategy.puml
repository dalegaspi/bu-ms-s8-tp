@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

enum CourseGrade << enumeration >> {
  - gradeValue: int
  + valueOf(String): CourseGrade
  + values(): CourseGrade[]
   gradeValue: int
}
class Department {
  - registrar: Registrar
  - courses: Set<Course>
  - concentrations: Set<Concentration>
  - students: Set<Student>
  - programs: Set<Program>
  - chairPerson: Faculty
  - faculty: Set<Faculty>
  + addThesis(Student, Thesis, Semester, Faculty): void
  + getUnderGraduateAdvisor(SchoolYear): Optional<Faculty>
  + findCourse(String): Optional<Course>
  + addGraduateAdvisor(SchoolYear, Faculty): void
  + findFaculty(String): Optional<Faculty>
  + addFaculty(Faculty): void
  + addUnderGraduateAdvisor(SchoolYear, Faculty): void
  + sendMessageToChairPerson(Person, String, String): void
  + assignGrade(Student, String, CourseGrade): void
  + sendMessageToFaculty(Person, Faculty, String, String): void
  + getGraduateAdvisor(SchoolYear): Optional<Faculty>
  + enrollProgram(Student, String): void
  + createElectiveCourse(String, String, String): Elective
  + enrollProgram(Student, Program): void
  + findProgram(String): Optional<Program>
  + findStudent(String): Optional<Student>
  + createCoreCourse(String, String, String): Core
  + addProgram(Program): void
  + addConcentration(Concentration): void
   name: String
   builder: DepartmentBuilder<T>
   faculty: Collection<Faculty>
   courses: Set<Course>
   programs: Collection<Program>
   defaultGpaComputeStrategy: GpaComputeStrategy
   students: Collection<Student>
   chairPerson: Faculty
   classOfferings: Collection<ClassOffering>
   registrar: Registrar
   concentrations: Collection<Concentration>
}
interface DepartmentBuilder<T> << interface >> {
  + addClassOfferings(): void
  + addCoursesAndConcentrations(): void
  + addFaculty(): void
  + addPrograms(): void
  + build(): T
}
interface GpaComputeStrategy << interface >>
class Student {
  - thesis: Thesis
  - gpaComputeStrategy: GpaComputeStrategy
  - program: Program
  - enrolledCourses: List<EnrolledCourse>
  + addEnrolledCourse(EnrolledCourse): void
  + emitFullStatus(): void
  + findEnrolledCourse(String): Optional<EnrolledCourse>
  + gpa(): double
  + removeCourse(EnrolledCourse): boolean
   thesis: Optional<Thesis>
   enrolledCoursesStatus: String
   inFinalYear: boolean
   enrolledCourses: List<EnrolledCourse>
   program: Program
   fullStatus: String
   gpaComputeStrategy: GpaComputeStrategy
}

Department         "1" *-[#595959,plain]-> "students\n*" Student            
DepartmentBuilder   +-[#820000,plain]-  Department         
Student            "1" *-[#595959,plain]-> "gpaComputeStrategy\n1" GpaComputeStrategy 
@enduml
